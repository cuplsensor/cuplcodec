name: Python package


on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip # This path is specific to Ubuntu
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run setup
      run: python setup.py develop

    - name: Test with pytest
      run: |
        pip install pytest
        pytest

  release:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - {number: 3.6, bldstring: 'cp36-cp36m'}
          - {number: 3.7, bldstring: 'cp37-cp37m'}
          - {number: 3.8, bldstring: 'cp38-cp38'}

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version.number }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version.number }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build manylinux wheel
      uses: RalfG/python-wheels-manylinux-build@v0.1
      with:
        python-versions: ${{ matrix.python-version.bldstring }}
        build-requirements: 'cython'

    - name: Delete non-wscodec binaries
      run: |
        cd wheelhouse
        ls -1 | grep -v 'wscodec.*'${{ matrix.python-version.bldstring }}'-manylinux1_x86_64' | sudo xargs rm -f

    - name: Publish packages to PyPI.
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
        packages_dir: wheelhouse/

  release_source:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run setup.py
        run: python setup.py sdist

      - name: Delete non-tar.gz files
        run: |
          cd dist
          ls -1 | grep -v '.*tar.gz' | sudo xargs rm -f

      - name: Publish source tar.gz to PyPI.
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: dist/

