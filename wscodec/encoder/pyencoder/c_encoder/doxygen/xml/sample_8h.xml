<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="sample_8h" kind="file" language="C++">
    <compoundname>sample.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includedby refid="sample_8c" local="yes">sample.c</includedby>
    <incdepgraph>
      <node id="107">
        <label>stdbool.h</label>
      </node>
      <node id="106">
        <label>sample.h</label>
        <link refid="sample_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="109">
        <label>sample.c</label>
        <link refid="sample_8c"/>
      </node>
      <node id="108">
        <label>sample.h</label>
        <link refid="sample_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sample_8h_1a9bca97751f2d9c20da42670c8a83b67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sample_init</definition>
        <argsstring>(unsigned int status, bool err)</argsstring>
        <name>sample_init</name>
        <param>
          <type>unsigned int</type>
          <declname>status</declname>
          <defname>stat</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>Initialise the sample state machine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit status value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Sets an error condition where data will not be logged to the URL circular buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temponly</parametername>
</parameternamelist>
<parameterdescription>
<para>When true only temperature measurands will be recorded to the circular buffer on each call of <ref refid="sample_8c_1a5be5f77a339896373b1b5fff87fbfbcd" kindref="member">sample_push()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.h" line="7" column="1" bodyfile="sample.c" bodystart="68" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="sample_8h_1a5be5f77a339896373b1b5fff87fbfbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sample_push</definition>
        <argsstring>(int meas1, int meas2)</argsstring>
        <name>sample_push</name>
        <param>
          <type>int</type>
          <declname>meas1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meas2</declname>
        </param>
        <briefdescription>
<para>Append a sample containing up to two measurands onto the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meas1</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurand 1 e.g. temperature. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meas2</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurand 2 e.g. relative humidity.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the cursor has moved from the end to the start and data are being overwritten. Otherwise 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.h" line="8" column="1" bodyfile="sample.c" bodystart="175" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="sample_8h_1a130e5805e5b411b541e60ee607185b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sample_updateendstop</definition>
        <argsstring>(unsigned int minutes)</argsstring>
        <name>sample_updateendstop</name>
        <param>
          <type>unsigned int</type>
          <declname>minutes</declname>
        </param>
        <briefdescription>
<para>Update the base64 encoded endstop and write it to the tag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minutes</parametername>
</parameternamelist>
<parameterdescription>
<para>Minutes elapsed since the previous sample. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.h" line="9" column="1" bodyfile="sample.c" bodystart="132" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SAMPLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SAMPLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sample_8h_1a9bca97751f2d9c20da42670c8a83b67d" kindref="member">sample_init</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstatus" kindref="compound">status</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sample_8h_1a5be5f77a339896373b1b5fff87fbfbcd" kindref="member">sample_push</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas2);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sample_8h_1a130e5805e5b411b541e60ee607185b98" kindref="member">sample_updateendstop</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//_SAMPLE_H_</highlight></codeline>
    </programlisting>
    <location file="sample.h"/>
  </compounddef>
</doxygen>
