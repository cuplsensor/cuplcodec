<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="sample_8c" kind="file" language="C++">
    <compoundname>sample.c</compoundname>
    <includes refid="sample_8h" local="yes">sample.h</includes>
    <includes refid="octet_8h" local="yes">octet.h</includes>
    <includes refid="ndef_8h" local="yes">ndef.h</includes>
    <includes refid="smplhist_8h" local="yes">smplhist.h</includes>
    <includes refid="prng_8h" local="yes">prng.h</includes>
    <includes refid="defs_8h" local="yes">defs.h</includes>
    <includes refid="batv_8h" local="yes">batv.h</includes>
    <includes refid="base64_8h" local="yes">base64.h</includes>
    <includes refid="nvtype_8h" local="yes">nvtype.h</includes>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="90">
        <label>stdbool.h</label>
      </node>
      <node id="97">
        <label>base64.h</label>
        <link refid="base64_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>stdint.h</label>
      </node>
      <node id="92">
        <label>ndef.h</label>
        <link refid="ndef_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>string.h</label>
      </node>
      <node id="93">
        <label>smplhist.h</label>
        <link refid="smplhist_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>prng.h</label>
        <link refid="prng_8h"/>
      </node>
      <node id="91">
        <label>octet.h</label>
        <link refid="octet_8h"/>
      </node>
      <node id="99">
        <label>nvtype.h</label>
        <link refid="nvtype_8h"/>
      </node>
      <node id="88">
        <label>sample.c</label>
        <link refid="sample_8c"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>sample.h</label>
        <link refid="sample_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>batv.h</label>
        <link refid="batv_8h"/>
      </node>
      <node id="95">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structstatus" prot="public">status</innerclass>
    <innerclass refid="structendstop" prot="public">endstop</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="sample_8c_1a649a882141d51724d0851c5637ae9b52" prot="public" static="no">
        <name>TEMPRH</name>
        <initializer>&apos;1&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last character of the URL version string if the URL contains both temperature and relative humidity measurands. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="12" column="9" bodyfile="sample.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sample_8c_1ae8b2d876f1eb3087a5859e78688c5169" prot="public" static="no">
        <name>TEMPONLY</name>
        <initializer>&apos;2&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last character of the URL version string if the URL contains only temperature measurands. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="13" column="9" bodyfile="sample.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sample_8c_1a639bc14d5477eb6e1bbbdaec7ea6fd8c" prot="public" static="no">
        <name>ENDSTOP_BYTE</name>
        <initializer>&apos;~&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last character of the endstop. Must be URL safe according to RFC 1738. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="14" column="9" bodyfile="sample.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="sample_8c_1a330856ff01a76092fb302f70696dcaa8" prot="public" static="no" strong="no">
        <type></type>
        <name>urlstate</name>
        <enumvalue id="sample_8c_1a330856ff01a76092fb302f70696dcaa8a335559f3d0770f8905099143d5fdfc68" prot="public">
          <name>first_tick</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write both meaurands in the first sample of samplebuf </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="sample_8c_1a330856ff01a76092fb302f70696dcaa8ae4aa5da2d1ebb43ca39a9ecf8e0adf80" prot="public">
          <name>first_tock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite measurand 2 in the first sample of samplebuf. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="sample_8c_1a330856ff01a76092fb302f70696dcaa8abe4c377a0e72bf9ac494563b516341c6" prot="public">
          <name>final_tick</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write both measurands in the second sample of samplebuf. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="sample_8c_1a330856ff01a76092fb302f70696dcaa8a00bd38fad6dca592789a78004554929e" prot="public">
          <name>final_tock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite measurand 2 in the second sample of samplebuf. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="16" column="1" bodyfile="sample.c" bodystart="16" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sample_8c_1a5da5b85f337f4f42a9a64c2ce881fc33" prot="public" static="no">
        <type>struct <ref refid="structstatus" kindref="compound">status</ref></type>
        <definition>typedef struct status  stat_t</definition>
        <argsstring></argsstring>
        <name>stat_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="29" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="sample_8c_1ae17bc26975847c791058e10b0c376dfa" prot="public" static="no">
        <type>struct <ref refid="structendstop" kindref="compound">endstop</ref></type>
        <definition>typedef struct endstop  endstop_t</definition>
        <argsstring></argsstring>
        <name>endstop_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sample_8c_1abf81593fd753830ee4bc1b86550ac189" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char encodedoctet[8]</definition>
        <argsstring>[8]</argsstring>
        <name>encodedoctet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores the base64 encoded <ref refid="" kindref="compound">samplebuf.</ref></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="37" column="1" bodyfile="sample.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample_8c_1a537f229dc2f7bd4976c24a88da1f3312" prot="public" static="yes" mutable="no">
        <type><ref refid="smplhist_8h_1a6aed6c376195d183573501f3a8a77ca3" kindref="member">sdchars_t</ref></type>
        <definition>sdchars_t samplebuf[2]</definition>
        <argsstring>[2]</argsstring>
        <name>samplebuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores two 3-byte samples. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="38" column="1" bodyfile="sample.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample_8c_1a1d75b7269242a544f5e80f66f18ce064" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int lensmpls</definition>
        <argsstring></argsstring>
        <name>lensmpls</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of valid samples in the circular buffer, starting from the endstop and counting backwards. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="39" column="1" bodyfile="sample.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample_8c_1a933befd99719afeb506beee220361f01" prot="public" static="yes" mutable="no">
        <type><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8" kindref="member">urlstate</ref></type>
        <definition>urlstate state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="40" column="1" bodyfile="sample.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample_8c_1a66de00a65de740789c7bdd5c673efcb7" prot="public" static="yes" mutable="no">
        <type><ref refid="sample_8c_1a5da5b85f337f4f42a9a64c2ce881fc33" kindref="member">stat_t</ref></type>
        <definition>stat_t urlstatus</definition>
        <argsstring></argsstring>
        <name>urlstatus</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="41" column="1" bodyfile="sample.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample_8c_1a76f4d25fbde464a6f20c01983869c134" prot="public" static="yes" mutable="no">
        <type><ref refid="sample_8c_1ae17bc26975847c791058e10b0c376dfa" kindref="member">endstop_t</ref></type>
        <definition>endstop_t endstop</definition>
        <argsstring></argsstring>
        <name>endstop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The 16 byte end stop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="42" column="1" bodyfile="sample.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample_8c_1a0734ae63bc16c45337b0501caf459126" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool _temponly</definition>
        <argsstring></argsstring>
        <name>_temponly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal flag to mark if only temperature data are being written on each call call of <ref refid="sample_8c_1a5be5f77a339896373b1b5fff87fbfbcd" kindref="member">sample_push(int,int)</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="43" column="1" bodyfile="sample.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sample_8c_1a6cdeaaf5e3ea4f68f2d041a6d6389a70" prot="public" static="no" mutable="no">
        <type><ref refid="nvtype_8h_1a78682d319c0de97ea2b35f88095d6e57" kindref="member">nv_t</ref></type>
        <definition>nv_t nv</definition>
        <argsstring></argsstring>
        <name>nv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Externally defined parameters stored in non-volatile memory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="44" column="1" bodyfile="nvtype.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sample_8c_1a80e54f51851c6880b55a8462e74a4aa0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sample_updatelc</definition>
        <argsstring>(void)</argsstring>
        <name>sample_updatelc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update loop counter and battery voltage in the preamble status field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="49" column="1" bodyfile="sample.c" bodystart="49" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="sample_8c_1ac206e7a316f283a09d11da98380e6f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sample_init</definition>
        <argsstring>(unsigned int stat, bool err, bool temponly)</argsstring>
        <name>sample_init</name>
        <param>
          <type>unsigned int</type>
          <declname>stat</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>err</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>temponly</declname>
        </param>
        <briefdescription>
<para>Initialise the sample state machine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit status value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Sets an error condition where data will not be logged to the URL circular buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temponly</parametername>
</parameternamelist>
<parameterdescription>
<para>When true only temperature measurands will be recorded to the circular buffer on each call of <ref refid="sample_8c_1a5be5f77a339896373b1b5fff87fbfbcd" kindref="member">sample_push()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="69" column="1" bodyfile="sample.c" bodystart="69" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="sample_8c_1a0ccd842a9eae8758ecf1b8c6ebd37eaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void makemarker</definition>
        <argsstring>(unsigned int minutes, char *endmarker)</argsstring>
        <name>makemarker</name>
        <param>
          <type>unsigned int</type>
          <declname>minutes</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>endmarker</declname>
        </param>
        <briefdescription>
<para>Write the endstop. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minutes</parametername>
</parameternamelist>
<parameterdescription>
<para>Minutes elapsed since the previous sample. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endmarker</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end marker byte array. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="116" column="1" bodyfile="sample.c" bodystart="116" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="sample_8c_1af03ea00a573c4bbe024b2ae03764e58a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void makeendstop</definition>
        <argsstring>(unsigned int minutes)</argsstring>
        <name>makeendstop</name>
        <param>
          <type>unsigned int</type>
          <declname>minutes</declname>
        </param>
        <briefdescription>
<para>Update the endstop and encode it as base64. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minutes</parametername>
</parameternamelist>
<parameterdescription>
<para>Minutes elapsed since the previous sample. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="133" column="1" bodyfile="sample.c" bodystart="133" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="sample_8c_1a130e5805e5b411b541e60ee607185b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sample_updateendstop</definition>
        <argsstring>(unsigned int minutes)</argsstring>
        <name>sample_updateendstop</name>
        <param>
          <type>unsigned int</type>
          <declname>minutes</declname>
        </param>
        <briefdescription>
<para>Update the base64 encoded endstop and write it to the tag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minutes</parametername>
</parameternamelist>
<parameterdescription>
<para>Minutes elapsed since the previous sample. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="147" column="1" bodyfile="sample.c" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="sample_8c_1a16a16e777dfba7eddcd73fd2b472d91b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void loadboth</definition>
        <argsstring>(sdchars_t *sample, int meas1, int meas2)</argsstring>
        <name>loadboth</name>
        <param>
          <type><ref refid="smplhist_8h_1a6aed6c376195d183573501f3a8a77ca3" kindref="member">sdchars_t</ref> *</type>
          <declname>sample</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meas1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meas2</declname>
        </param>
        <briefdescription>
<para>Write both measurands of a sample. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sample</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sample that will be modified. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meas1</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurand 1. Only the 12 least sigificant bits will be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meas2</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurand 2. Only the 12 least sigificant bits will be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="161" column="1" bodyfile="sample.c" bodystart="161" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="sample_8c_1a5cf0405daf296e4fb016d0766c7ec5de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void loadm2</definition>
        <argsstring>(sdchars_t *sample, int meas2)</argsstring>
        <name>loadm2</name>
        <param>
          <type><ref refid="smplhist_8h_1a6aed6c376195d183573501f3a8a77ca3" kindref="member">sdchars_t</ref> *</type>
          <declname>sample</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meas2</declname>
        </param>
        <briefdescription>
<para>Write measurand 2 of a sample. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sample</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sample that will be modified. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meas2</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurand 2. Only the 12 least sigificant bits will be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="174" column="1" bodyfile="sample.c" bodystart="174" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="sample_8c_1a5be5f77a339896373b1b5fff87fbfbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sample_push</definition>
        <argsstring>(int meas1, int meas2)</argsstring>
        <name>sample_push</name>
        <param>
          <type>int</type>
          <declname>meas1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meas2</declname>
        </param>
        <briefdescription>
<para>Append a sample containing up to two measurands onto the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meas1</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurand 1 e.g. temperature. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meas2</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurand 2 e.g. relative humidity.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the cursor has moved from the end to the start and data are being overwritten. Otherwise 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sample.c" line="190" column="1" bodyfile="sample.c" bodystart="190" bodyend="280"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sample_8h" kindref="compound">sample.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="octet_8h" kindref="compound">octet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndef_8h" kindref="compound">ndef.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="smplhist_8h" kindref="compound">smplhist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="prng_8h" kindref="compound">prng.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="defs_8h" kindref="compound">defs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="batv_8h" kindref="compound">batv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base64_8h" kindref="compound">base64.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nvtype_8h" kindref="compound">nvtype.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEMPRH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;1&apos;<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor">#define<sp/>TEMPONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;2&apos;<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor">#define<sp/>ENDSTOP_BYTE<sp/><sp/><sp/><sp/>&apos;~&apos;<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">typedef<sp/>enum<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a335559f3d0770f8905099143d5fdfc68" kindref="member">first_tick</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8ae4aa5da2d1ebb43ca39a9ecf8e0adf80" kindref="member">first_tock</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8abe4c377a0e72bf9ac494563b516341c6" kindref="member">final_tick</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a00bd38fad6dca592789a78004554929e" kindref="member">final_tock</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8" kindref="member">urlstate</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structstatus" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstatus" kindref="compound">status</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structstatus_1ad6771c066dbc9a3f9c97f67d183dafe4" kindref="member">loopcount</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structstatus_1a5393c99e246925076b1dfd69a64177ef" kindref="member">status</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structstatus_1a64bf6569e5dcde7c63303ca7557c4ce9" kindref="member">batvoltage</ref>;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}<sp/><ref refid="sample_8c_1a5da5b85f337f4f42a9a64c2ce881fc33" kindref="member">stat_t</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structendstop" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structendstop" kindref="compound">endstop</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structendstop_1ae5f29c2e1b08176f604e6a4255147883" kindref="member">md5lenb64</ref>[12];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structendstop_1a45d0b3c1f88901a3d92d905bd044672d" kindref="member">markerb64</ref>[4];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="sample_8c_1ae17bc26975847c791058e10b0c376dfa" kindref="member">endstop_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>encodedoctet[8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structsensordatachars" kindref="compound">sdchars_t</ref><sp/>samplebuf[2];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lensmpls<sp/>=<sp/>0;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8" kindref="member">urlstate</ref><sp/>state;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstatus" kindref="compound">stat_t</ref><sp/>urlstatus<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structendstop" kindref="compound">endstop_t</ref><sp/><ref refid="structendstop" kindref="compound">endstop</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_temponly;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structnvstruct" kindref="compound">nv_t</ref><sp/><ref refid="sample_8c_1a6cdeaaf5e3ea4f68f2d041a6d6389a70" kindref="member">nv</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sample_updatelc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>statusb64[9];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>urlstatus.<ref refid="structstatus_1ad6771c066dbc9a3f9c97f67d183dafe4" kindref="member">loopcount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//urlstatus.status<sp/>=<sp/>stat_get(&amp;err);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>urlstatus.<ref refid="structstatus_1a64bf6569e5dcde7c63303ca7557c4ce9" kindref="member">batvoltage</ref><sp/>=<sp/><ref refid="batv_8c_1a5995d869f98d751c9f0f31850a088584" kindref="member">batv_measure</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="base64_8c_1a65618dacdde3ed7eeb15bbe7b3751cb9" kindref="member">Base64encode</ref>(statusb64,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;urlstatus,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(urlstatus));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="ndef_8c_1ac55b5f717f0851a05b88d77e69ad3567" kindref="member">ndef_writepreamble</ref>(<ref refid="defs_8h_1a96171b1fd0df68266c8208e01cf7b7c0" kindref="member">BUFLEN_BLKS</ref>,<sp/>statusb64);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="octet_8c_1aa35e20df25ff426a3a0f1b36cf14d376" kindref="member">octet_restore</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1ac206e7a316f283a09d11da98380e6f58" kindref="member">sample_init</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stat,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>err,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>temponly)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>statusb64[9];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startblk;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflenblks;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ver;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>urlstatus.<ref refid="structstatus_1ad6771c066dbc9a3f9c97f67d183dafe4" kindref="member">loopcount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>urlstatus.<ref refid="structstatus_1a5393c99e246925076b1dfd69a64177ef" kindref="member">status</ref><sp/>=<sp/>stat;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>urlstatus.<ref refid="structstatus_1a64bf6569e5dcde7c63303ca7557c4ce9" kindref="member">batvoltage</ref><sp/>=<sp/><ref refid="batv_8c_1a5995d869f98d751c9f0f31850a088584" kindref="member">batv_measure</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="base64_8c_1a65618dacdde3ed7eeb15bbe7b3751cb9" kindref="member">Base64encode</ref>(statusb64,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;urlstatus,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(urlstatus));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>lensmpls<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a335559f3d0770f8905099143d5fdfc68" kindref="member">first_tick</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buflenblks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buflenblks<sp/>=<sp/><ref refid="defs_8h_1a96171b1fd0df68266c8208e01cf7b7c0" kindref="member">BUFLEN_BLKS</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>_temponly<sp/>=<sp/>temponly;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_temponly<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ver<sp/>=<sp/><ref refid="sample_8c_1ae8b2d876f1eb3087a5859e78688c5169" kindref="member">TEMPONLY</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ver<sp/>=<sp/><ref refid="sample_8c_1a649a882141d51724d0851c5637ae9b52" kindref="member">TEMPRH</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="ndef_8c_1a80c4e6a3a3e7ffaad5527adc3224c280" kindref="member">ndef_writeblankurl</ref>(buflenblks,<sp/>statusb64,<sp/>&amp;startblk,<sp/>ver);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="octet_8c_1a0104a90b7774008e8a9976ca77a0a4f3" kindref="member">octet_init</ref>(startblk,<sp/>buflenblks);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="prng_8c_1a7743b02470e6a9781b6df16ebec41134" kindref="member">prng_init</ref>(<ref refid="sample_8c_1a6cdeaaf5e3ea4f68f2d041a6d6389a70" kindref="member">nv</ref>.<ref refid="structnvstruct_1aec7e67f64e6ee88dda940f1b837f9351" kindref="member">randstate</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makemarker(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>endmarker)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutesixb;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>randomtenb;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>minutesixb<sp/>=<sp/>minutes<sp/>&amp;<sp/>0x3F;<sp/></highlight><highlight class="comment">//<sp/>Select<sp/>lower<sp/>6<sp/>bits<sp/>of<sp/>the<sp/>minutes<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>randomtenb<sp/>=<sp/>5;<sp/></highlight><highlight class="comment">//prng_getrandom(10);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>*(endmarker)<sp/>=<sp/>minutesixb<sp/>+<sp/>((randomtenb<sp/>&amp;<sp/>0x03)&lt;&lt;6);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>*(endmarker<sp/>+<sp/>1)<sp/>=<sp/>randomtenb<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeendstop(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endmarker[2];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>makemarker(minutes,<sp/>endmarker);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base64_8c_1a65618dacdde3ed7eeb15bbe7b3751cb9" kindref="member">Base64encode</ref>(<ref refid="structendstop" kindref="compound">endstop</ref>.<ref refid="structendstop_1a45d0b3c1f88901a3d92d905bd044672d" kindref="member">markerb64</ref>,<sp/>endmarker,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(endmarker));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>padding<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structendstop" kindref="compound">endstop</ref>.<ref refid="structendstop_1a45d0b3c1f88901a3d92d905bd044672d" kindref="member">markerb64</ref>[3]<sp/>=<sp/><ref refid="sample_8c_1a639bc14d5477eb6e1bbbdaec7ea6fd8c" kindref="member">ENDSTOP_BYTE</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1a130e5805e5b411b541e60ee607185b98" kindref="member">sample_updateendstop</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>makeendstop(minutes);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octet_8c_1ac2fc0ce5139ec19f357ebf68c88b54e1" kindref="member">octet_write</ref>(<ref refid="octet_8h_1a4d73229613f72b4dc2cf993e2329923daf8c1af96ea2609525686923985022522" kindref="member">Octet2</ref>,<sp/>&amp;<ref refid="structendstop" kindref="compound">endstop</ref>.<ref refid="structendstop_1ae5f29c2e1b08176f604e6a4255147883" kindref="member">md5lenb64</ref>[8]);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octet_8c_1af95f1c1da472de7c7a167779b51ef284" kindref="member">octet_commit2</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadboth(<ref refid="structsensordatachars" kindref="compound">sdchars_t</ref><sp/>*sample,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas2)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;<ref refid="structsensordatachars_1a978b1d72dd059ccd2323ee66bea4d654" kindref="member">m1Msb</ref><sp/>=<sp/>((meas1<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;<ref refid="structsensordatachars_1a030c938f5a438a3556f1887dfe72466f" kindref="member">m2Msb</ref><sp/>=<sp/>((meas2<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;<ref refid="structsensordatachars_1afbfc01b26f853a9c35003e1c065db84f" kindref="member">Lsb</ref><sp/>=<sp/>((meas1<sp/>&amp;<sp/>0xF)<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(meas2<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadm2(<ref refid="structsensordatachars" kindref="compound">sdchars_t</ref><sp/>*sample,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas2)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;<ref refid="structsensordatachars_1a030c938f5a438a3556f1887dfe72466f" kindref="member">m2Msb</ref><sp/>=<sp/>((meas2<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;<ref refid="structsensordatachars_1afbfc01b26f853a9c35003e1c065db84f" kindref="member">Lsb</ref><sp/>&amp;=<sp/>~0x0F;<sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>low<sp/>nibble<sp/>of<sp/>LSB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;<ref refid="structsensordatachars_1afbfc01b26f853a9c35003e1c065db84f" kindref="member">Lsb</ref><sp/>|=<sp/>(meas2<sp/>&amp;<sp/>0xF);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>low<sp/>nibble<sp/>of<sp/>LSB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1a5be5f77a339896373b1b5fff87fbfbcd" kindref="member">sample_push</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas2)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8" kindref="member">urlstate</ref><sp/>nextstate;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="structmd5len" kindref="compound">md5len_t</ref><sp/>md5length;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_temponly<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meas2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state<sp/>==<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a335559f3d0770f8905099143d5fdfc68" kindref="member">first_tick</ref>)<sp/>&amp;&amp;<sp/>(lensmpls<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octet_8c_1ac943c19926037180241f1e97a11b7567" kindref="member">octet_movecursor</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="octet_8h_1a91d594c2716b872bf8b1b59a87567516" kindref="member">OctState_t</ref><sp/>octetstate<sp/>=<sp/><ref refid="octet_8c_1af7d3b29522962f2be3eb543a9f66bdef" kindref="member">octet_getstate</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(state)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a335559f3d0770f8905099143d5fdfc68" kindref="member">first_tick</ref>:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadboth(&amp;samplebuf[0],<sp/>meas1,<sp/>meas2);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadboth(&amp;samplebuf[1],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(octetstate<sp/>!=<sp/><ref refid="octet_8h_1aefad8516abbfca6d626941e525872611a57fa0bc21fa59477d4dc142308115c82" kindref="member">firstloop</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lensmpls<sp/>-=<sp/><ref refid="defs_8h_1a3440475701aa9d74140519db14a08e65" kindref="member">SAMPLES_PER_OCTET</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(octetstate<sp/>==<sp/><ref refid="octet_8h_1aefad8516abbfca6d626941e525872611a4e74c26fa00eaaa19f02e1bd09231012" kindref="member">loopingaround</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_updatelc();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lensmpls++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smplhist_8c_1a8b601164eab6ef2ea4d6643970a760f6" kindref="member">smplhist_push</ref>(samplebuf[0]);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_temponly)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextstate<sp/>=<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8ae4aa5da2d1ebb43ca39a9ecf8e0adf80" kindref="member">first_tock</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextstate<sp/>=<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8abe4c377a0e72bf9ac494563b516341c6" kindref="member">final_tick</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8ae4aa5da2d1ebb43ca39a9ecf8e0adf80" kindref="member">first_tock</ref>:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadm2(&amp;samplebuf[0],<sp/>meas1);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smplhist_8c_1affe400f90c858c88868d0ee6a1a9d3df" kindref="member">smplhist_ovr</ref>(samplebuf[0]);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextstate<sp/>=<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8abe4c377a0e72bf9ac494563b516341c6" kindref="member">final_tick</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8abe4c377a0e72bf9ac494563b516341c6" kindref="member">final_tick</ref>:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadboth(&amp;samplebuf[1],<sp/>meas1,<sp/>meas2);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lensmpls++;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smplhist_8c_1a8b601164eab6ef2ea4d6643970a760f6" kindref="member">smplhist_push</ref>(samplebuf[1]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_temponly)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextstate<sp/>=<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a00bd38fad6dca592789a78004554929e" kindref="member">final_tock</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextstate<sp/>=<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a335559f3d0770f8905099143d5fdfc68" kindref="member">first_tick</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a00bd38fad6dca592789a78004554929e" kindref="member">final_tock</ref>:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadm2(&amp;samplebuf[1],<sp/>meas1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smplhist_8c_1affe400f90c858c88868d0ee6a1a9d3df" kindref="member">smplhist_ovr</ref>(samplebuf[1]);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextstate<sp/>=<sp/><ref refid="sample_8c_1a330856ff01a76092fb302f70696dcaa8a335559f3d0770f8905099143d5fdfc68" kindref="member">first_tick</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>md5length<sp/>=<sp/><ref refid="smplhist_8c_1a92c0645dcea2976bba0b05556472e211" kindref="member">smplhist_md5</ref>(lensmpls,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>samples<sp/>(6<sp/>bytes)<sp/>per<sp/>8<sp/>base64<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base64_8c_1a65618dacdde3ed7eeb15bbe7b3751cb9" kindref="member">Base64encode</ref>(encodedoctet,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)samplebuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(samplebuf));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9<sp/>bytes<sp/>per<sp/>12<sp/>base64<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base64_8c_1a65618dacdde3ed7eeb15bbe7b3751cb9" kindref="member">Base64encode</ref>(<ref refid="structendstop" kindref="compound">endstop</ref>.<ref refid="structendstop_1ae5f29c2e1b08176f604e6a4255147883" kindref="member">md5lenb64</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;md5length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(md5length));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>makeendstop(0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octet_8c_1ac2fc0ce5139ec19f357ebf68c88b54e1" kindref="member">octet_write</ref>(<ref refid="octet_8h_1a4d73229613f72b4dc2cf993e2329923dabb49f2e8ded70fd8058b3e5298f2e99f" kindref="member">Octet0</ref>,<sp/>encodedoctet);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octet_8c_1ac2fc0ce5139ec19f357ebf68c88b54e1" kindref="member">octet_write</ref>(<ref refid="octet_8h_1a4d73229613f72b4dc2cf993e2329923da8cac7c070f12ed9c9ad443ebf7aca553" kindref="member">Octet1</ref>,<sp/>&amp;<ref refid="structendstop" kindref="compound">endstop</ref>.<ref refid="structendstop_1ae5f29c2e1b08176f604e6a4255147883" kindref="member">md5lenb64</ref>[0]);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octet_8c_1ac2fc0ce5139ec19f357ebf68c88b54e1" kindref="member">octet_write</ref>(<ref refid="octet_8h_1a4d73229613f72b4dc2cf993e2329923daf8c1af96ea2609525686923985022522" kindref="member">Octet2</ref>,<sp/>&amp;<ref refid="structendstop" kindref="compound">endstop</ref>.<ref refid="structendstop_1ae5f29c2e1b08176f604e6a4255147883" kindref="member">md5lenb64</ref>[8]);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octet_8c_1a356b1274922f88575947b2db44f20634" kindref="member">octet_commit4</ref>();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>nextstate;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(octetstate<sp/>==<sp/><ref refid="octet_8h_1aefad8516abbfca6d626941e525872611a4e74c26fa00eaaa19f02e1bd09231012" kindref="member">loopingaround</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="sample.c"/>
  </compounddef>
</doxygen>
